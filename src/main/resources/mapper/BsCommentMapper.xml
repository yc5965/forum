<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.etc.dao.BsCommentMapper">


  <sql id="bsCommentColumns">
		a.id AS "id",
		a.post_id AS "postId",
		a.content AS "content",
		a.update_by AS "updateBy.id",
		a.create_by AS "createBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.create_date AS "createDate",
		a.remarks AS "remarks",
		b.title AS "bsPost.title",
		u.name AS "createBy.name",
		u.photo AS "createBy.photo"
	</sql>

  <sql id="bsCommentJoins">
		left join bs_post b on a.post_id = b.id and b.del_flag = '0'
		LEFT JOIN bs_user u ON u.id = a.create_by and u.del_flag = '0'
	</sql>

  <select id="get" resultType="BsComment">
    SELECT
    <include refid="bsCommentColumns"/>
    FROM bs_comment a
    <include refid="bsCommentJoins"/>
    WHERE a.id = #{id} and a.del_flag = '0'
  </select>

  <select id="findList" resultType="BsComment">
    SELECT
    <include refid="bsCommentColumns"/>
    FROM bs_comment a
    <include refid="bsCommentJoins"/>
    <where>
      a.del_flag = '0'
      <if test="content != null and content != ''">
        AND a.content LIKE
        <if test="dbName == 'oracle'">'%'||#{content}||'%'</if>
        <if test="dbName == 'mssql'">'%'+#{content}+'%'</if>
        <if test="dbName == 'mysql'">concat('%',#{content},'%')</if>
      </if>
      <if test="createBy != null and createBy.id != null and createBy.id != ''">
        AND a.create_by = #{createBy.id}
      </if>
    </where>
    <choose>
      <when test="page !=null and page.orderBy != null and page.orderBy != ''">
        ORDER BY ${page.orderBy}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
  </select>

  <select id="findAllList" resultType="BsComment">
    SELECT
    <include refid="bsCommentColumns"/>
    FROM bs_comment a
    <include refid="bsCommentJoins"/>
    <where>
      a.del_flag ='0'
    </where>
    <choose>
      <when test="page !=null and page.orderBy != null and page.orderBy != ''">
        ORDER BY ${page.orderBy}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
  </select>

  <insert id="insert">
		INSERT INTO bs_comment(
			id,
			post_id,
			content,
			update_by,
			create_by,
			update_date,
			del_flag,
			create_date,
			remarks
		) VALUES (
			#{bsComment.id},
			#{bsComment.postId},
			#{bsComment.content},
			#{bsComment.createBy.id},
			#{bsComment.createBy.id},
			#{bsComment.updateDate},
			#{bsComment.delFlag},
			#{bsComment.createDate},
			#{bsComment.remarks}
		)
	</insert>

  <update id="update">
		UPDATE bs_comment SET
			post_id = #{postId},
			content = #{content},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>

  <update id="delete">
		UPDATE bs_comment SET
			del_flag = '1'
		WHERE id = #{id}
	</update>

  <select id="findComments" resultType="BsComment">
    SELECT
    <include refid="bsCommentColumns"/>
    ,pu.name AS "bsPost.createBy.name"
    FROM bs_comment a
    <include refid="bsCommentJoins"/>
    LEFT join bs_user pu on pu.del_flag = '0' and pu.id = b.create_by
    <where>
      a.del_flag = '0' and b.del_flag = '0'
      <if test="createById != null and createById != ''">
        AND a.create_by = #{createById}
      </if>
    </where>
    ORDER BY a.create_date DESC
    LIMIT ${pageStart}, ${pageSize}
  </select>

  <select id="replyItem" resultType="BsComment">
    SELECT
    a.create_by AS  "createBy.id",
    u.name AS "createBy.name",
    u.photo AS "createBy.photo",
    COUNT(a.id) as "userCommentCount"
    FROM bs_comment a
    <include refid="bsCommentJoins"/>
    <where>
      a.del_flag = '0'
    </where>
    group by a.create_by,u.name,u.photo
    ORDER BY COUNT(a.id) desc
    limit 12
  </select>


  <select id="findPostComments" resultType="BsComment">
    SELECT
    <include refid="bsCommentColumns"/>
    ,c.likeCount AS likeCount
    ,CASE when bl.ref_id is null then '0' else '1' end as isLike
    FROM bs_comment a
    <include refid="bsCommentJoins"/>
    LEFT JOIN (select ref_id,count(*) as likeCount from bs_like bl where bl.del_flag = '0' and bl.like_type = '1' group by ref_id) c on c.ref_id = a.id
    LEFT JOIN (select ref_id,create_by from bs_like where del_flag = '0' and like_type = '1' group by ref_id,create_by) bl on bl.ref_id = a.id and bl.create_by = #{userId}
    <where>
      a.del_flag = '0'
      <if test="bsComment != null and bsComment.postId != ''">
        AND a.post_id = #{bsComment.postId}
      </if>
    </where>
    ORDER BY a.create_date DESC
    LIMIT ${pageStart}, ${pageSize}
  </select>


  <update id="deleteByPostId">
		UPDATE bs_comment SET
			del_flag = '1'
		WHERE post_id = #{postId}
	</update>


  <select id="findAllUserByPostId" resultType="java.lang.String">
		SELECT
			distinct u.login_name
		FROM bs_comment a
		left join bs_user u on u.id = a.create_by and u.del_flag = '0'
		where a.del_flag = '0' and post_id = #{postId}
	</select>

  <select id="findUserCommentCout" resultType="java.lang.Integer">
    SELECT
    count(*) as commentCount
    FROM bs_comment a
    <where>
      a.del_flag = '0'
      <if test="createById != null  and createById != ''">
        AND a.create_by = #{createById}
      </if>
    </where>
  </select>

  <select id="getPostCount" resultType="java.lang.Integer">
    SELECT
    count(*) as postCount
    FROM bs_comment a
    <where>
      a.del_flag = '0'
      <if test="bsComment != null and bsComment.postId != ''">
        AND a.post_id = #{bsComment.postId}
      </if>
    </where>
  </select>

  <select id="findTabPosition" resultType="java.lang.Integer">
		SELECT
			p.rowno AS position
		FROM
			(
			SELECT
				id,
				@rowno := @rowno + 1 AS rowno
			FROM
				bs_comment a,
			( SELECT @rowno := 0 ) r
			WHERE
				a.del_flag = '0'
			AND a.post_id = #{bsComment.postId}
			ORDER BY
				a.create_date DESC
			) p
		WHERE
			p.id = #{bsComment.id}
	</select>

</mapper>